JsHamcrest={version:"0.6.1",isMatcher:function(a){return a instanceof JsHamcrest.SimpleMatcher},areArraysEqual:function(g,e){var d,c;if(g instanceof Array||e instanceof Array){if(g.length!=e.length){return false}for(var f=0;f<g.length;f++){d=g[f];c=e[f];if(!JsHamcrest.areObjectsEqual(d,c)){return false}}return true}else{return g==e}},areObjectsEqual:function(b,a){if(b instanceof Array&&a instanceof Array){return JsHamcrest.areArraysEqual(b,a)}else{if(typeof b=="object"&&typeof a=="object"&&b&&a){return c(b,a)&&c(a,b)}else{return b==a}}function c(e,d){for(var f in e){if(e.hasOwnProperty(f)){if(!JsHamcrest.areObjectsEqual(e[f],d[f])){return false}}}return true}},SimpleMatcher:function(a){a=a||{};this.matches=a.matches;this.describeTo=a.describeTo;if(a.describeValueTo){this.describeValueTo=a.describeValueTo}},CombinableMatcher:function(a){JsHamcrest.SimpleMatcher.apply(this,arguments);a=a||{};this.and=function(c){var b=JsHamcrest.Matchers.allOf(this,c);return new JsHamcrest.CombinableMatcher({matches:b.matches,describeTo:function(d){d.appendDescriptionOf(b)}})};this.or=function(c){var b=JsHamcrest.Matchers.anyOf(this,c);return new JsHamcrest.CombinableMatcher({matches:b.matches,describeTo:function(d){d.appendDescriptionOf(b)}})}},Description:function(){var a="";this.get=function(){return a};this.appendDescriptionOf=function(b){if(b){b.describeTo(this)}return this};this.append=function(b){if(b!=null){a+=b}return this};this.appendLiteral=function(b){var c;if(b===c){this.append("undefined")}else{if(b===null){this.append("null")}else{if(b instanceof Array){this.appendValueList("[",", ","]",b)}else{if(typeof b=="string"){this.append('"'+b+'"')}else{if(b instanceof Function){this.append("Function")}else{this.append(b)}}}}}return this};this.appendValueList=function(f,e,b,d){this.append(f);for(var c=0;c<d.length;c++){if(c>0){this.append(e)}this.appendLiteral(d[c])}this.append(b);return this};this.appendList=function(f,e,b,d){this.append(f);for(var c=0;c<d.length;c++){if(c>0){this.append(e)}this.appendDescriptionOf(d[c])}this.append(b);return this}}};JsHamcrest.SimpleMatcher.prototype.describeValueTo=function(b,a){a.appendLiteral(b)};JsHamcrest.CombinableMatcher.prototype=new JsHamcrest.SimpleMatcher();JsHamcrest.CombinableMatcher.prototype.constructor=JsHamcrest.CombinableMatcher;JsHamcrest.Matchers={};JsHamcrest.Matchers.truth=function(){return new JsHamcrest.SimpleMatcher({matches:function(a){return a},describeTo:function(a){a.append("truth")}})};JsHamcrest.Matchers.is=function(a){if(!JsHamcrest.isMatcher(a)){a=JsHamcrest.Matchers.equalTo(a)}return new JsHamcrest.SimpleMatcher({matches:function(b){return a.matches(b)},describeTo:function(b){b.append("is ").appendDescriptionOf(a)}})};JsHamcrest.Matchers.not=function(a){if(!JsHamcrest.isMatcher(a)){a=JsHamcrest.Matchers.equalTo(a)}return new JsHamcrest.SimpleMatcher({matches:function(b){return !a.matches(b)},describeTo:function(b){b.append("not ").appendDescriptionOf(a)}})};JsHamcrest.Matchers.equalTo=function(a){return new JsHamcrest.SimpleMatcher({matches:function(b){return JsHamcrest.areObjectsEqual(a,b)},describeTo:function(b){b.append("equal to ").appendLiteral(a)}})};JsHamcrest.Matchers.anything=function(){return new JsHamcrest.SimpleMatcher({matches:function(a){return true},describeTo:function(a){a.append("anything")}})};JsHamcrest.Matchers.nil=function(){return new JsHamcrest.SimpleMatcher({matches:function(a){return a==null},describeTo:function(a){a.appendLiteral(null)}})};JsHamcrest.Matchers.sameAs=function(a){return new JsHamcrest.SimpleMatcher({matches:function(b){return b===a},describeTo:function(b){b.append("same as ").appendLiteral(a)}})};JsHamcrest.Matchers.raises=function(a){return new JsHamcrest.SimpleMatcher({matches:function(c){try{c()}catch(b){if(b.name==a){return true}else{throw b}}return false},describeTo:function(b){b.append("raises ").append(a)}})};JsHamcrest.Matchers.raisesAnything=function(){return new JsHamcrest.SimpleMatcher({matches:function(b){try{b()}catch(a){return true}return false},describeTo:function(a){a.append("raises anything")}})};JsHamcrest.Matchers.both=function(a){if(!JsHamcrest.isMatcher(a)){a=JsHamcrest.Matchers.equalTo(a)}return new JsHamcrest.CombinableMatcher({matches:a.matches,describeTo:function(b){b.append("both ").appendDescriptionOf(a)}})};JsHamcrest.Matchers.either=function(a){if(!JsHamcrest.isMatcher(a)){a=JsHamcrest.Matchers.equalTo(a)}return new JsHamcrest.CombinableMatcher({matches:a.matches,describeTo:function(b){b.append("either ").appendDescriptionOf(a)}})};JsHamcrest.Matchers.allOf=function(){var a=arguments;if(a[0] instanceof Array){a=a[0]}return new JsHamcrest.SimpleMatcher({matches:function(d){for(var b=0;b<a.length;b++){var c=a[b];if(!JsHamcrest.isMatcher(c)){c=JsHamcrest.Matchers.equalTo(c)}if(!c.matches(d)){return false}}return true},describeTo:function(b){b.appendList("("," and ",")",a)}})};JsHamcrest.Matchers.anyOf=function(){var a=arguments;if(a[0] instanceof Array){a=a[0]}return new JsHamcrest.SimpleMatcher({matches:function(d){for(var b=0;b<a.length;b++){var c=a[b];if(!JsHamcrest.isMatcher(c)){c=JsHamcrest.Matchers.equalTo(c)}if(c.matches(d)){return true}}return false},describeTo:function(b){b.appendList("("," or ",")",a)}})};JsHamcrest.Matchers.greaterThan=function(a){return new JsHamcrest.SimpleMatcher({matches:function(b){return b>a},describeTo:function(b){b.append("greater than ").appendLiteral(a)}})};JsHamcrest.Matchers.greaterThanOrEqualTo=function(a){return new JsHamcrest.SimpleMatcher({matches:function(b){return b>=a},describeTo:function(b){b.append("greater than or equal to ").appendLiteral(a)}})};JsHamcrest.Matchers.lessThan=function(a){return new JsHamcrest.SimpleMatcher({matches:function(b){return b<a},describeTo:function(b){b.append("less than ").appendLiteral(a)}})};JsHamcrest.Matchers.lessThanOrEqualTo=function(a){return new JsHamcrest.SimpleMatcher({matches:function(b){return b<=a},describeTo:function(b){b.append("less than or equal to ").append(a)}})};JsHamcrest.Matchers.notANumber=function(){return new JsHamcrest.SimpleMatcher({matches:function(a){return isNaN(a)},describeTo:function(a){a.append("not a number")}})};JsHamcrest.Matchers.divisibleBy=function(a){return new JsHamcrest.SimpleMatcher({matches:function(b){return b%a===0},describeTo:function(b){b.append("divisible by ").appendLiteral(a)}})};JsHamcrest.Matchers.even=function(){return new JsHamcrest.SimpleMatcher({matches:function(a){return a%2===0},describeTo:function(a){a.append("even")}})};JsHamcrest.Matchers.odd=function(){return new JsHamcrest.SimpleMatcher({matches:function(a){return a%2!==0},describeTo:function(a){a.append("odd")}})};JsHamcrest.Matchers.between=function(a){return{and:function(b){var d=b;var c=a;if(a>b){d=a;c=b}return new JsHamcrest.SimpleMatcher({matches:function(e){return e>=c&&e<=d},describeTo:function(e){e.append("between ").appendLiteral(c).append(" and ").appendLiteral(d)}})}}};JsHamcrest.Matchers.closeTo=function(a,b){if(!b){b=0}return new JsHamcrest.SimpleMatcher({matches:function(c){return(Math.abs(c-a)-b)<=0},describeTo:function(c){c.append("number within ").appendLiteral(b).append(" of ").appendLiteral(a)}})};JsHamcrest.Matchers.zero=function(){return new JsHamcrest.SimpleMatcher({matches:function(a){return a===0},describeTo:function(a){a.append("zero")}})};JsHamcrest.Matchers.equalIgnoringCase=function(a){return new JsHamcrest.SimpleMatcher({matches:function(b){return b.toUpperCase()==a.toUpperCase()},describeTo:function(b){b.append('equal ignoring case "').append(a).append('"')}})};JsHamcrest.Matchers.containsString=function(a){return new JsHamcrest.SimpleMatcher({matches:function(b){return b.indexOf(a)>=0},describeTo:function(b){b.append('contains string "').append(a).append('"')}})};JsHamcrest.Matchers.startsWith=function(a){return new JsHamcrest.SimpleMatcher({matches:function(b){return b.indexOf(a)===0},describeTo:function(b){b.append("starts with ").appendLiteral(a)}})};JsHamcrest.Matchers.endsWith=function(a){return new JsHamcrest.SimpleMatcher({matches:function(b){return b.lastIndexOf(a)+a.length==b.length},describeTo:function(b){b.append("ends with ").appendLiteral(a)}})};JsHamcrest.Matchers.matches=function(a){return new JsHamcrest.SimpleMatcher({matches:function(b){return a.test(b)},describeTo:function(b){b.append("matches ").appendLiteral(a)}})};JsHamcrest.Matchers.emailAddress=function(){var a=/^([a-z0-9_\.\-\+])+\@(([a-z0-9\-])+\.)+([a-z0-9]{2,4})+$/i;return new JsHamcrest.SimpleMatcher({matches:function(b){return a.test(b)},describeTo:function(b){b.append("email address")}})};JsHamcrest.Matchers.hasMember=function(a){return new JsHamcrest.SimpleMatcher({matches:function(b){if(b){return a in b}return false},describeTo:function(b){b.append("has member ").appendLiteral(a)}})};JsHamcrest.Matchers.hasFunction=function(a){return new JsHamcrest.SimpleMatcher({matches:function(b){if(b){return a in b&&b[a] instanceof Function}return false},describeTo:function(b){b.append("has function ").appendLiteral(a)}})};JsHamcrest.Matchers.instanceOf=function(a){return new JsHamcrest.SimpleMatcher({matches:function(b){return !!(b instanceof a)},describeTo:function(c){var b=a.name?a.name:"a class";c.append("instance of ").append(b)}})};JsHamcrest.Matchers.typeOf=function(a){return new JsHamcrest.SimpleMatcher({matches:function(b){return(typeof b==a)},describeTo:function(b){b.append("typeof ").append('"').append(a).append('"')}})};JsHamcrest.Matchers.object=function(){return new JsHamcrest.Matchers.instanceOf(Object)};JsHamcrest.Matchers.string=function(){return new JsHamcrest.Matchers.typeOf("string")};JsHamcrest.Matchers.number=function(){return new JsHamcrest.Matchers.typeOf("number")};JsHamcrest.Matchers.bool=function(){return new JsHamcrest.Matchers.typeOf("boolean")};JsHamcrest.Matchers.func=function(){return new JsHamcrest.Matchers.instanceOf(Function)};JsHamcrest.Matchers.hasItem=function(a){if(!JsHamcrest.isMatcher(a)){a=JsHamcrest.Matchers.equalTo(a)}return new JsHamcrest.SimpleMatcher({matches:function(c){if(!(c instanceof Array)){return false}for(var b=0;b<c.length;b++){if(a.matches(c[b])){return true}}return false},describeTo:function(b){b.append("array contains item ").appendDescriptionOf(a)}})};JsHamcrest.Matchers.hasItems=function(){var a=[];for(var b=0;b<arguments.length;b++){a.push(JsHamcrest.Matchers.hasItem(arguments[b]))}return JsHamcrest.Matchers.allOf(a)};JsHamcrest.Matchers.everyItem=function(a){if(!JsHamcrest.isMatcher(a)){a=JsHamcrest.Matchers.equalTo(a)}return new JsHamcrest.SimpleMatcher({matches:function(c){if(!(c instanceof Array)){return false}for(var b=0;b<c.length;b++){if(!a.matches(c[b])){return false}}return true},describeTo:function(b){b.append("every item ").appendDescriptionOf(a)}})};JsHamcrest.Matchers.isIn=function(){var a=JsHamcrest.Matchers.equalTo;var b=arguments;if(b[0] instanceof Array){b=b[0]}return new JsHamcrest.SimpleMatcher({matches:function(d){for(var c=0;c<b.length;c++){if(a(b[c]).matches(d)){return true}}return false},describeTo:function(c){c.append("one of ").appendLiteral(b)}})};JsHamcrest.Matchers.oneOf=JsHamcrest.Matchers.isIn;JsHamcrest.Matchers.empty=function(){return new JsHamcrest.SimpleMatcher({matches:function(a){return a.length===0},describeTo:function(a){a.append("empty")}})};JsHamcrest.Matchers.hasSize=function(a){if(!JsHamcrest.isMatcher(a)){a=JsHamcrest.Matchers.equalTo(a)}return new JsHamcrest.SimpleMatcher({matches:function(b){return a.matches(b.length)},describeTo:function(b){b.append("has size ").appendDescriptionOf(a)},describeValueTo:function(c,b){b.append(c.length)}})};JsHamcrest.Operators={};JsHamcrest.Operators.filter=function(d,c){if(!(d instanceof Array)||c==null){return d}if(!(c instanceof JsHamcrest.SimpleMatcher)){c=JsHamcrest.Matchers.equalTo(c)}var a=[];for(var b=0;b<d.length;b++){if(c.matches(d[b])){a.push(d[b])}}return a};JsHamcrest.Operators.assert=function(d,c,a){a=a?a:{};var b=new JsHamcrest.Description();if(c==null){c=JsHamcrest.Matchers.truth()}else{if(!JsHamcrest.isMatcher(c)){c=JsHamcrest.Matchers.equalTo(c)}}if(a.message){b.append(a.message).append(". ")}b.append("Expected ");c.describeTo(b);if(!c.matches(d)){b.passed=false;b.append(" but was ");c.describeValueTo(d,b);if(a.fail){a.fail(b.get())}}else{b.append(": Success");b.passed=true;if(a.pass){a.pass(b.get())}}return b};JsHamcrest.Integration=(function(){var a=this;return{copyMembers:function(b,c){if(arguments.length==1){c=b;JsHamcrest.Integration.copyMembers(JsHamcrest.Matchers,c);JsHamcrest.Integration.copyMembers(JsHamcrest.Operators,c)}else{if(b){for(var d in b){if(!(d in c)){c[d]=b[d]}}}}},installMatchers:function(b){var c=JsHamcrest.Matchers;JsHamcrest.Integration.copyMembers(b,c)},installOperators:function(b){var c=JsHamcrest.Operators;JsHamcrest.Integration.copyMembers(b,c)},WebBrowser:function(){JsHamcrest.Integration.copyMembers(a);a.assertThat=function(d,c,b){return JsHamcrest.Operators.assert(d,c,{message:b,fail:function(e){alert("[FAIL] "+e)},pass:function(e){alert("[SUCCESS] "+e)}})}},Rhino:function(){JsHamcrest.Integration.copyMembers(a);a.assertThat=function(d,c,b){return JsHamcrest.Operators.assert(d,c,{message:b,fail:function(e){print("[FAIL] "+e+"\n")},pass:function(e){print("[SUCCESS] "+e+"\n")}})}},JsTestDriver:function(d){d=d?d:{};var c=d.scope||a;JsHamcrest.Integration.copyMembers(c);function b(l){var g=new Error(l);g.name="AssertError";try{var k=new RegExp("jshamcrest.*.js:","i");var f=g.stack.split("\n");var h="";for(var j=0;j<f.length;j++){if(!k.test(f[j])){h+=f[j]+"\n"}}g.stack=h}catch(m){}throw g}c.assertThat=function(g,f,e){return JsHamcrest.Operators.assert(g,f,{message:e,fail:b})}},JsUnitTest:function(c){c=c?c:{};var b=c.scope||JsUnitTest.Unit.Testcase.prototype;JsHamcrest.Integration.copyMembers(b);b.assertThat=function(g,f,e){var d=this;return JsHamcrest.Operators.assert(g,f,{message:e,fail:function(h){d.fail(h)},pass:function(){d.pass()}})}},YUITest:function(c){c=c?c:{};var b=c.scope||a;JsHamcrest.Integration.copyMembers(b);b.Assert=YAHOO.util.Assert;YAHOO.util.Assert.that=function(f,e,d){return JsHamcrest.Operators.assert(f,e,{message:d,fail:function(g){YAHOO.util.Assert.fail(g)}})}},QUnit:function(c){c=c?c:{};var b=c.scope||a;JsHamcrest.Integration.copyMembers(b);b.assertThat=function(f,e,d){return JsHamcrest.Operators.assert(f,e,{message:d,fail:function(g){QUnit.ok(false,g)},pass:function(g){QUnit.ok(true,g)}})}},jsUnity:function(d){d=d?d:{};var c=d.scope||jsUnity.env.defaultScope;var b=d.attachAssertions||false;JsHamcrest.Integration.copyMembers(c);if(b){jsUnity.attachAssertions(c)}c.assertThat=function(g,f,e){return JsHamcrest.Operators.assert(g,f,{message:e,fail:function(h){throw h}})}},screwunit:function(c){c=c?c:{};var b=c.scope||Screw.Matchers;JsHamcrest.Integration.copyMembers(b);b.assertThat=function(f,e,d){return JsHamcrest.Operators.assert(f,e,{message:d,fail:function(g){throw g}})}}}})();