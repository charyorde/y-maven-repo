module("equiv");test("Primitive types and constants",function(){equals(QUnit.equiv(null,null),true,"null");equals(QUnit.equiv(null,{}),false,"null");equals(QUnit.equiv(null,undefined),false,"null");equals(QUnit.equiv(null,0),false,"null");equals(QUnit.equiv(null,false),false,"null");equals(QUnit.equiv(null,""),false,"null");equals(QUnit.equiv(null,[]),false,"null");equals(QUnit.equiv(undefined,undefined),true,"undefined");equals(QUnit.equiv(undefined,null),false,"undefined");equals(QUnit.equiv(undefined,0),false,"undefined");equals(QUnit.equiv(undefined,false),false,"undefined");equals(QUnit.equiv(undefined,{}),false,"undefined");equals(QUnit.equiv(undefined,[]),false,"undefined");equals(QUnit.equiv(undefined,""),false,"undefined");equals(QUnit.equiv(0/0,0/0),true,"NaN");equals(QUnit.equiv(1/0,2/0),true,"Infinity");equals(QUnit.equiv(-1/0,2/0),false,"-Infinity, Infinity");equals(QUnit.equiv(-1/0,-2/0),true,"-Infinity, -Infinity");equals(QUnit.equiv(0/0,1/0),false,"NaN, Infinity");equals(QUnit.equiv(1/0,0/0),false,"NaN, Infinity");equals(QUnit.equiv(0/0,null),false,"NaN");equals(QUnit.equiv(0/0,undefined),false,"NaN");equals(QUnit.equiv(0/0,0),false,"NaN");equals(QUnit.equiv(0/0,false),false,"NaN");equals(QUnit.equiv(0/0,function(){}),false,"NaN");equals(QUnit.equiv(1/0,null),false,"NaN, Infinity");equals(QUnit.equiv(1/0,undefined),false,"NaN, Infinity");equals(QUnit.equiv(1/0,0),false,"NaN, Infinity");equals(QUnit.equiv(1/0,1),false,"NaN, Infinity");equals(QUnit.equiv(1/0,false),false,"NaN, Infinity");equals(QUnit.equiv(1/0,true),false,"NaN, Infinity");equals(QUnit.equiv(1/0,function(){}),false,"NaN, Infinity");equals(QUnit.equiv(0,0),true,"number");equals(QUnit.equiv(0,1),false,"number");equals(QUnit.equiv(1,0),false,"number");equals(QUnit.equiv(1,1),true,"number");equals(QUnit.equiv(1.1,1.1),true,"number");equals(QUnit.equiv(5e-7,5e-7),true,"number");equals(QUnit.equiv(0,""),false,"number");equals(QUnit.equiv(0,"0"),false,"number");equals(QUnit.equiv(1,"1"),false,"number");equals(QUnit.equiv(0,false),false,"number");equals(QUnit.equiv(1,true),false,"number");equals(QUnit.equiv(true,true),true,"boolean");equals(QUnit.equiv(true,false),false,"boolean");equals(QUnit.equiv(false,true),false,"boolean");equals(QUnit.equiv(false,0),false,"boolean");equals(QUnit.equiv(false,null),false,"boolean");equals(QUnit.equiv(false,undefined),false,"boolean");equals(QUnit.equiv(true,1),false,"boolean");equals(QUnit.equiv(true,null),false,"boolean");equals(QUnit.equiv(true,undefined),false,"boolean");equals(QUnit.equiv("",""),true,"string");equals(QUnit.equiv("a","a"),true,"string");equals(QUnit.equiv("foobar","foobar"),true,"string");equals(QUnit.equiv("foobar","foo"),false,"string");equals(QUnit.equiv("",0),false,"string");equals(QUnit.equiv("",false),false,"string");equals(QUnit.equiv("",null),false,"string");equals(QUnit.equiv("",undefined),false,"string");equals(QUnit.equiv(0,new Number()),true,"short annotation VS new annotation");equals(QUnit.equiv(new Number(),0),true,"short annotation VS new annotation");equals(QUnit.equiv(1,new Number(1)),true,"short annotation VS new annotation");equals(QUnit.equiv(new Number(1),1),true,"short annotation VS new annotation");equals(QUnit.equiv(new Number(0),1),false,"short annotation VS new annotation");equals(QUnit.equiv(0,new Number(1)),false,"short annotation VS new annotation");equals(QUnit.equiv(new String(),""),true,"short annotation VS new annotation");equals(QUnit.equiv("",new String()),true,"short annotation VS new annotation");equals(QUnit.equiv(new String("My String"),"My String"),true,"short annotation VS new annotation");equals(QUnit.equiv("My String",new String("My String")),true,"short annotation VS new annotation");equals(QUnit.equiv("Bad String",new String("My String")),false,"short annotation VS new annotation");equals(QUnit.equiv(new String("Bad String"),"My String"),false,"short annotation VS new annotation");equals(QUnit.equiv(false,new Boolean()),true,"short annotation VS new annotation");equals(QUnit.equiv(new Boolean(),false),true,"short annotation VS new annotation");equals(QUnit.equiv(true,new Boolean(true)),true,"short annotation VS new annotation");equals(QUnit.equiv(new Boolean(true),true),true,"short annotation VS new annotation");equals(QUnit.equiv(true,new Boolean(1)),true,"short annotation VS new annotation");equals(QUnit.equiv(false,new Boolean(false)),true,"short annotation VS new annotation");equals(QUnit.equiv(new Boolean(false),false),true,"short annotation VS new annotation");equals(QUnit.equiv(false,new Boolean(0)),true,"short annotation VS new annotation");equals(QUnit.equiv(true,new Boolean(false)),false,"short annotation VS new annotation");equals(QUnit.equiv(new Boolean(false),true),false,"short annotation VS new annotation");equals(QUnit.equiv(new Object(),{}),true,"short annotation VS new annotation");equals(QUnit.equiv({},new Object()),true,"short annotation VS new annotation");equals(QUnit.equiv(new Object(),{a:1}),false,"short annotation VS new annotation");equals(QUnit.equiv({a:1},new Object()),false,"short annotation VS new annotation");equals(QUnit.equiv({a:undefined},new Object()),false,"short annotation VS new annotation");equals(QUnit.equiv(new Object(),{a:undefined}),false,"short annotation VS new annotation")});test("Objects Basics.",function(){equals(QUnit.equiv({},{}),true);equals(QUnit.equiv({},null),false);equals(QUnit.equiv({},undefined),false);equals(QUnit.equiv({},0),false);equals(QUnit.equiv({},false),false);equals(QUnit.equiv({},[]),false);equals(QUnit.equiv({a:1},{a:1}),true);equals(QUnit.equiv({a:1},{a:"1"}),false);equals(QUnit.equiv({a:[]},{a:[]}),true);equals(QUnit.equiv({a:{}},{a:null}),false);equals(QUnit.equiv({a:1},{}),false);equals(QUnit.equiv({},{a:1}),false);equals(QUnit.equiv({a:undefined},{}),false);equals(QUnit.equiv({},{a:undefined}),false);equals(QUnit.equiv({a:[{bar:undefined}]},{a:[{bat:undefined}]}),false)});test("Arrays Basics.",function(){equals(QUnit.equiv([],[]),true);equals(QUnit.equiv([],null),false);equals(QUnit.equiv([],undefined),false);equals(QUnit.equiv([],false),false);equals(QUnit.equiv([],0),false);equals(QUnit.equiv([],""),false);equals(QUnit.equiv([],{}),false);equals(QUnit.equiv([null],[]),false);equals(QUnit.equiv([undefined],[]),false);equals(QUnit.equiv([],[null]),false);equals(QUnit.equiv([],[undefined]),false);equals(QUnit.equiv([null],[undefined]),false);equals(QUnit.equiv([[]],[[]]),true);equals(QUnit.equiv([[],[],[]],[[],[],[]]),true);equals(QUnit.equiv([[],[],[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]],[[],[],[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]),true);equals(QUnit.equiv([[],[],[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]],[[],[],[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]),false);equals(QUnit.equiv([[],[],[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[{}]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]],[[],[],[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]),false);equals(QUnit.equiv([1,2,3,4,5,6,7,8,9,[1,2,3,4,5,6,7,8,9,[1,2,3,4,5,[[6,7,8,9,[[1,2,3,4,[2,3,4,[1,2,[1,2,3,4,[1,2,3,4,5,6,7,8,9,[0],1,2,3,4,5,6,7,8,9],5,6,7,8,9],4,5,6,7,8,9],5,6,7,8,9],5,6,7]]]]]]],[1,2,3,4,5,6,7,8,9,[1,2,3,4,5,6,7,8,9,[1,2,3,4,5,[[6,7,8,9,[[1,2,3,4,[2,3,4,[1,2,[1,2,3,4,[1,2,3,4,5,6,7,8,9,[0],1,2,3,4,5,6,7,8,9],5,6,7,8,9],4,5,6,7,8,9],5,6,7,8,9],5,6,7]]]]]]]),true,"Multidimensional");equals(QUnit.equiv([1,2,3,4,5,6,7,8,9,[1,2,3,4,5,6,7,8,9,[1,2,3,4,5,[[6,7,8,9,[[1,2,3,4,[2,3,4,[1,2,[1,2,3,4,[1,2,3,4,5,6,7,8,9,[0],1,2,3,4,5,6,7,8,9],5,6,7,8,9],4,5,6,7,8,9],5,6,7,8,9],5,6,7]]]]]]],[1,2,3,4,5,6,7,8,9,[1,2,3,4,5,6,7,8,9,[1,2,3,4,5,[[6,7,8,9,[[1,2,3,4,[2,3,4,[1,2,["1",2,3,4,[1,2,3,4,5,6,7,8,9,[0],1,2,3,4,5,6,7,8,9],5,6,7,8,9],4,5,6,7,8,9],5,6,7,8,9],5,6,7]]]]]]]),false,"Multidimensional");equals(QUnit.equiv([1,2,3,4,5,6,7,8,9,[1,2,3,4,5,6,7,8,9,[1,2,3,4,5,[[6,7,8,9,[[1,2,3,4,[2,3,4,[1,2,[1,2,3,4,[1,2,3,4,5,6,7,8,9,[0],1,2,3,4,5,6,7,8,9],5,6,7,8,9],4,5,6,7,8,9],5,6,7,8,9],5,6,7]]]]]]],[1,2,3,4,5,6,7,8,9,[1,2,3,4,5,6,7,8,9,[1,2,3,4,5,[[6,7,8,9,[[1,2,3,4,[2,3,[1,2,[1,2,3,4,[1,2,3,4,5,6,7,8,9,[0],1,2,3,4,5,6,7,8,9],5,6,7,8,9],4,5,6,7,8,9],5,6,7,8,9],5,6,7]]]]]]]),false,"Multidimensional")});test("Functions.",function(){var b=function(){};var a=function(){};var d=function(){var e=0};var c=function(){var e=0};equals(QUnit.equiv(function(){},function(){}),false,"Anonymous functions");equals(QUnit.equiv(function(){},function(){return true}),false,"Anonymous functions");equals(QUnit.equiv(b,b),true,"Function references");equals(QUnit.equiv(b,a),false,"Function references");equals(QUnit.equiv(d,c),false,"Function references");equals(QUnit.equiv(a,d),false,"Function references");equals(QUnit.equiv(function(){},true),false);equals(QUnit.equiv(function(){},undefined),false);equals(QUnit.equiv(function(){},null),false);equals(QUnit.equiv(function(){},{}),false)});test("Date instances.",function(){var c=new Date();c.setTime(0);var b=new Date();b.setTime(0);var a=new Date();equals(QUnit.equiv(c,0),false);equals(QUnit.equiv(c,b),true);equals(QUnit.equiv(c,a),false)});test("RegExp.",function(){var k=/foo/;var u=/foo/gim;var s=/foo/gmi;var o=/foo/igm;var m=/foo/img;var l=/foo/mig;var y=/foo/mgi;var C=/foo/i;var A=/foo/i;var f=/foo/m;var e=/foo/m;var d=/foo/g;var c=/foo/g;equals(QUnit.equiv(u,s),true,"Modifier order");equals(QUnit.equiv(u,o),true,"Modifier order");equals(QUnit.equiv(u,m),true,"Modifier order");equals(QUnit.equiv(u,l),true,"Modifier order");equals(QUnit.equiv(u,y),true,"Modifier order");equals(QUnit.equiv(k,u),false,"Modifier");equals(QUnit.equiv(C,A),true,"Modifier");equals(QUnit.equiv(k,C),false,"Modifier");equals(QUnit.equiv(C,f),false,"Modifier");equals(QUnit.equiv(k,f),false,"Modifier");equals(QUnit.equiv(f,C),false,"Modifier");equals(QUnit.equiv(f,e),true,"Modifier");equals(QUnit.equiv(d,f),false,"Modifier");equals(QUnit.equiv(f,d),false,"Modifier");equals(QUnit.equiv(d,c),true,"Modifier");var w=/[a-z]/gi;var t=/[0-9]/gi;equals(QUnit.equiv(w,t),false,"Regex pattern");var p=/0/ig;var n=/"0"/ig;equals(QUnit.equiv(p,n),false,"Regex pattern");var B=/[\n\r\u2028\u2029]/g;var z=/[\n\r\u2028\u2029]/g;var x=/[\n\r\u2028\u2028]/g;var v=/[\n\r\u2028\u2029]/;equals(QUnit.equiv(B,z),true,"Regex pattern");equals(QUnit.equiv(B,x),false,"Regex pattern");equals(QUnit.equiv(B,v),false,"Regex pattern");var j="^[-_.a-z0-9]+@([-_a-z0-9]+\\.)+([A-Za-z][A-Za-z]|[A-Za-z][A-Za-z][A-Za-z])|(([0-9][0-9]?|[0-1][0-9][0-9]|[2][0-4][0-9]|[2][5][0-5]))$";var i="^[-_.a-z0-9]+@([-_a-z0-9]+\\.)+([A-Za-z][A-Za-z]|[A-Za-z][A-Za-z][A-Za-z])|(([0-9][0-9]?|[0-1][0-9][0-9]|[2][0-4][0-9]|[2][5][0-5]))$";var h="^[-_.a-z0-9]+@([-_a-z0-9]+.)+([A-Za-z][A-Za-z]|[A-Za-z][A-Za-z][A-Za-z])|(([0-9][0-9]?|[0-1][0-9][0-9]|[2][0-4][0-9]|[2][5][0-5]))$";var b=new RegExp(j);var a=new RegExp(i);var E=new RegExp(h);var D=new RegExp(h,"gi");var g=new RegExp(h,"ig");equals(QUnit.equiv(b,a),true,"Complex Regex");equals(QUnit.equiv(b,E),false,"Complex Regex");equals(QUnit.equiv(E,D),false,"Complex Regex");equals(QUnit.equiv(D,g),true,"Complex Regex");var q=/ /;equals(QUnit.equiv(q,function(){}),false,"Regex internal");equals(QUnit.equiv(q,{}),false,"Regex internal")});test("Complex Objects.",function(){function i(){return"fn1"}function h(){return"fn2"}equals(QUnit.equiv({a:1,b:null,c:[{}],d:{a:3.14159,b:false,c:{e:i,f:[[[]]],g:{j:{k:{n:{r:"r",s:[1,2,3],t:undefined,u:0,v:{w:{x:{y:"Yahoo!",z:null}}}},q:[],p:1/0,o:99},l:undefined,m:null}},d:0,i:true,h:"false"}},e:undefined,g:"",h:"h",f:{},i:[]},{a:1,b:null,c:[{}],d:{b:false,a:3.14159,c:{d:0,e:i,f:[[[]]],g:{j:{k:{n:{r:"r",t:undefined,u:0,s:[1,2,3],v:{w:{x:{z:null,y:"Yahoo!"}}}},o:99,p:1/0,q:[]},l:undefined,m:null}},i:true,h:"false"}},e:undefined,g:"",f:{},h:"h",i:[]}),true);equals(QUnit.equiv({a:1,b:null,c:[{}],d:{a:3.14159,b:false,c:{d:0,e:i,f:[[[]]],g:{j:{k:{n:{s:[1,2,3],t:undefined,u:0,v:{w:{x:{y:"Yahoo!",z:null}}}},o:99,p:1/0,q:[]},l:undefined,m:null}},h:"false",i:true}},e:undefined,f:{},g:"",h:"h",i:[]},{a:1,b:null,c:[{}],d:{a:3.14159,b:false,c:{d:0,e:i,f:[[[]]],g:{j:{k:{n:{r:"r",s:[1,2,3],t:undefined,u:0,v:{w:{x:{y:"Yahoo!",z:null}}}},o:99,p:1/0,q:[]},l:undefined,m:null}},h:"false",i:true}},e:undefined,f:{},g:"",h:"h",i:[]}),false);equals(QUnit.equiv({a:1,b:null,c:[{}],d:{a:3.14159,b:false,c:{d:0,e:i,f:[[[]]],g:{j:{k:{n:{r:"r",s:[1,2,3],t:undefined,u:0,v:{w:{x:{y:"Yahoo!",z:null}}}},o:99,p:1/0,q:[]},l:undefined,m:null}},h:"false",i:true}},e:undefined,f:{},g:"",h:"h",i:[]},{a:1,b:null,c:[{}],d:{a:3.14159,b:false,c:{d:0,e:i,f:[[[]]],g:{j:{k:{n:{r:"r",s:[1,2,3],u:0,v:{w:{x:{y:"Yahoo!",z:null}}}},o:99,p:1/0,q:[]},l:undefined,m:null}},h:"false",i:true}},e:undefined,f:{},g:"",h:"h",i:[]}),false);equals(QUnit.equiv({a:1,b:null,c:[{}],d:{a:3.14159,b:false,c:{d:0,e:i,f:[[[]]],g:{j:{k:{n:{r:"r",s:[1,2,3],t:undefined,u:0,v:{w:{x:{y:"Yahoo!",z:null}}}},o:99,p:1/0,q:[]},l:undefined,m:null}},h:"false",i:true}},e:undefined,f:{},g:"",h:"h",i:[]},{a:1,b:null,c:[{}],d:{a:3.14159,b:false,c:{d:0,e:i,f:[[[]]],g:{j:{k:{n:{r:"r",s:[1,2,3],t:undefined,u:0,v:{w:{x:{y:"Yahoo!",z:null}}}},o:99,p:1/0,q:{}},l:undefined,m:null}},h:"false",i:true}},e:undefined,f:{},g:"",h:"h",i:[]}),false);var b={a:["string",null,0,"1",1,{prop:null,foo:[1,2,null,{},[],[1,2,3]],bar:undefined},3,"Hey!","Κάνε πάντα γνωρίζουμε ας των, μηχανής επιδιόρθωσης επιδιορθώσεις ώς μια. Κλπ ας"],unicode:"老 汉语中存在 港澳和海外的华人圈中 贵州 我去了书店 现在尚有争",b:"b",c:i};var a={a:["string",null,0,"1",1,{prop:null,foo:[1,2,null,{},[],[1,2,3]],bar:undefined},3,"Hey!","Κάνε πάντα γνωρίζουμε ας των, μηχανής επιδιόρθωσης επιδιορθώσεις ώς μια. Κλπ ας"],unicode:"老 汉语中存在 港澳和海外的华人圈中 贵州 我去了书店 现在尚有争",b:"b",c:i};var g={a:["string",null,0,"1",1,{prop:null,foo:[1,2,null,{},[],[1,2,3,4]],bar:undefined},3,"Hey!","Κάνε πάντα γνωρίζουμε ας των, μηχανής επιδιόρθωσης επιδιορθώσεις ώς μια. Κλπ ας"],unicode:"老 汉语中存在 港澳和海外的华人圈中 贵州 我去了书店 现在尚有争",b:"b",c:i};var f={a:["string",null,0,"1",1,{prop:null,foo:[1,2,null,{},[],[1,2,3]],newprop:undefined,bar:undefined},3,"Hey!","Κάνε πάντα γνωρίζουμε ας των, μηχανής επιδιόρθωσης επιδιορθώσεις ώς μια. Κλπ ας"],unicode:"老 汉语中存在 港澳和海外的华人圈中 贵州 我去了书店 现在尚有争",b:"b",c:i};var e={a:["string",null,0,"1",1,{prop:null,foo:[1,2,null,{},[],[1,2,3]],bar:undefined},3,"Hey!","Κάνε πάντα γνωρίζουμε ας των, μηχανής επιδιόρθωσης επιδιορθώσεις ώς μια. Κλπ α"],unicode:"老 汉语中存在 港澳和海外的华人圈中 贵州 我去了书店 现在尚有争",b:"b",c:i};var d={a:["string",null,0,"1",1,{prop:null,foo:[1,2,undefined,{},[],[1,2,3]],bar:undefined},3,"Hey!","Κάνε πάντα γνωρίζουμε ας των, μηχανής επιδιόρθωσης επιδιορθώσεις ώς μια. Κλπ ας"],unicode:"老 汉语中存在 港澳和海外的华人圈中 贵州 我去了书店 现在尚有争",b:"b",c:i};var c={a:["string",null,0,"1",1,{prop:null,foo:[1,2,null,{},[],[1,2,3]],bat:undefined},3,"Hey!","Κάνε πάντα γνωρίζουμε ας των, μηχανής επιδιόρθωσης επιδιορθώσεις ώς μια. Κλπ ας"],unicode:"老 汉语中存在 港澳和海外的华人圈中 贵州 我去了书店 现在尚有争",b:"b",c:i};equals(QUnit.equiv(b,a),true);equals(QUnit.equiv(a,b),true);equals(QUnit.equiv(a,g),false);equals(QUnit.equiv(g,a),false);equals(QUnit.equiv(b,g),false);equals(QUnit.equiv(b,f),false);equals(QUnit.equiv(b,e),false);equals(QUnit.equiv(b,e),false);equals(QUnit.equiv(b,d),false);equals(QUnit.equiv(b,c),false);equals(QUnit.equiv(c,g),false)});test("Complex Arrays.",function(){function c(){}equals(QUnit.equiv([1,2,3,true,{},null,[{a:["","1",0]},5,6,7],"foo"],[1,2,3,true,{},null,[{a:["","1",0]},5,6,7],"foo"]),true);equals(QUnit.equiv([1,2,3,true,{},null,[{a:["","1",0]},5,6,7],"foo"],[1,2,3,true,{},null,[{b:["","1",0]},5,6,7],"foo"]),false);var b=[{b:c,c:false,"do":"reserved word","for":{ar:[3,5,9,"hey!",[],{ar:[1,[3,4,6,9,null,[],[]]],e:c,f:undefined}]},e:0.43445},5,"string",0,c,false,null,undefined,0,[4,5,6,7,8,9,11,22,33,44,55,"66",null,[],[[[[[3]]]],"3"],{},1/0],[],[[[],"foo",null,{n:1/0,z:{a:[3,4,5,6,"yep!",undefined,undefined],b:{}}},{}]]];equals(QUnit.equiv(b,[{b:c,c:false,"do":"reserved word","for":{ar:[3,5,9,"hey!",[],{ar:[1,[3,4,6,9,null,[],[]]],e:c,f:undefined}]},e:0.43445},5,"string",0,c,false,null,undefined,0,[4,5,6,7,8,9,11,22,33,44,55,"66",null,[],[[[[[3]]]],"3"],{},1/0],[],[[[],"foo",null,{n:1/0,z:{a:[3,4,5,6,"yep!",undefined,undefined],b:{}}},{}]]]),true);equals(QUnit.equiv(b,[{b:c,c:false,"do":"reserved word","for":{ar:[3,5,9,"hey!",[],{ar:[1,[3,4,6,9,null,[],[]]],e:c,f:undefined}]},e:0.43445},5,"string",0,c,false,null,undefined,0,[4,5,6,7,8,9,11,22,33,44,55,"66",null,[],[[[[[2]]]],"3"],{},1/0],[],[[[],"foo",null,{n:1/0,z:{a:[3,4,5,6,"yep!",undefined,undefined],b:{}}},{}]]]),false);equals(QUnit.equiv(b,[{b:c,c:false,"do":"reserved word","for":{ar:[3,5,9,"hey!",[],{ar:[1,[3,4,6,9,null,[],[]]],e:c,f:undefined}]},e:0.43445},5,"string",0,c,false,null,undefined,0,[4,5,6,7,8,9,11,22,33,44,55,"66",null,[],[[[[[3]]]],"3"],{},1/0],[],[[[],"foo",null,{n:-1/0,z:{a:[3,4,5,6,"yep!",undefined,undefined],b:{}}},{}]]]),false);equals(QUnit.equiv(b,[{b:c,c:false,"do":"reserved word","for":{ar:[3,5,9,"hey!",[],{ar:[1,[3,4,6,9,null,[],[]]],e:c,f:undefined}]},e:0.43445},5,"string",0,c,false,null,undefined,0,[4,5,6,7,8,9,11,22,33,44,55,"66",null,[],[[[[[3]]]],"3"],{},1/0],[],[[[],"foo",{n:1/0,z:{a:[3,4,5,6,"yep!",undefined,undefined],b:{}}},{}]]]),false);equals(QUnit.equiv(b,[{b:c,c:false,"do":"reserved word","for":{ar:[3,5,9,"hey!",[],{ar:[1,[3,4,6,9,null,[],[]]],e:c}]},e:0.43445},5,"string",0,c,false,null,undefined,0,[4,5,6,7,8,9,11,22,33,44,55,"66",null,[],[[[[[3]]]],"3"],{},1/0],[],[[[],"foo",null,{n:1/0,z:{a:[3,4,5,6,"yep!",undefined,undefined],b:{}}},{}]]]),false)});test("Prototypal inheritance",function(){function c(e){this.id=e}function a(e){this.id=e}a.prototype=new c();var d=new c("ok");var b=new a("ok");equals(QUnit.equiv(function(){},function(){}),false);equals(QUnit.equiv(b,d),true);c.prototype.bar=true;equals(QUnit.equiv(b,d),true);equals(QUnit.equiv(function(){},function(){}),false);equals(QUnit.equiv(b,d),true);a.prototype.foo=true;equals(QUnit.equiv(b,d),false);equals(QUnit.equiv(function(){},function(){}),false)});test("Instances",function(){function d(){}var c=new d();var a=new d();function b(){this.fn=function(){}}var k=new b();var h=new b();equals(QUnit.equiv(c,a),true,"Same property, same constructor");equals(QUnit.equiv(k,h),true,"Same property, same constructor");equals(QUnit.equiv(c,k),false,"Same properties but different constructor");function n(p){var o=0;this.year=p;this.isOld=function(){return p>10}}function e(p){var o=1;this.year=p;this.isOld=function(){return p>80}}var m=new n(30);var g=new n(30);var j=new n(10);var f=new e(30);var l={year:30};var i={year:30,isOld:function(){}};equals(QUnit.equiv(m,m),true);equals(QUnit.equiv(m,j),false);equals(QUnit.equiv(m,g),true);equals(QUnit.equiv(m,f),false)});test("Complex Instances Nesting (with function value in literals and/or in nested instances)",function(){function h(q){this.a={};this.fn=q;this.b={a:[]};this.o={};this.fn1=q}function f(q){this.fn=q;this.fn1=function(){};this.a=new h(function(){})}function k(){}function d(q){function r(){}this.x=10;this.fn=q;this.fn1=function(){};this.fn2=r;this.fn3={a:true,b:k};this.o1={};this.b1=new f(function(){});this.b2=new f({x:{b2:new f(function(){})}})}function b(q){function r(){}this.x=10;this.fn=q;this.fn1=function(){};this.fn2=r;this.fn3={a:true,b:k,c:r};this.o1={};this.b1=new f(function(){});this.b2=new f({x:{b2:new f(function(){})}})}function p(q){function r(){}this.x=10;this.fn=q;this.fn1=function(){};this.fn2=r;this.fn3={a:true,b:k};this.o1={};this.b1=new f(function(){});this.b2=new f({x:{b1:new f({a:function(){}}),b2:new f(function(){})}})}var g=new h(function(){});var e=new h(function(){});equals(QUnit.equiv(g,e),true);equals(QUnit.equiv(g,e),true);var o=new f(function(){});var n=new f(function(){});equals(QUnit.equiv(g,e),true);var j=new d(function(){});var i=new d(function(){});equals(QUnit.equiv(j,i),true);var c=new b(function(){});var a=new b(function(){});equals(QUnit.equiv(c,a),false);var m=new p(function(){});var l=new p(function(){});equals(QUnit.equiv(m,l),false)});test("object with references to self wont loop",function(){var b={abc:null},a={abc:null};b.abc=b;a.abc=a;equals(QUnit.equiv(b,a),true,"Should not repeat test on object (ambigous test)");b.def=1;a.def=1;equals(QUnit.equiv(b,a),true,"Should not repeat test on object (ambigous test)");b.def=1;a.def=0;equals(QUnit.equiv(b,a),false,"Should not repeat test on object (unambigous test)")});test("array with references to self wont loop",function(){var b=[],a=[];b.push(b);a.push(a);equals(QUnit.equiv(b,a),true,"Should not repeat test on array (ambigous test)");b.push("abc");a.push("abc");equals(QUnit.equiv(b,a),true,"Should not repeat test on array (ambigous test)");b.push("hello");a.push("goodbye");equals(QUnit.equiv(b,a),false,"Should not repeat test on array (unambigous test)")});test("mixed object/array with references to self wont loop",function(){var b=[{abc:null}],a=[{abc:null}];b[0].abc=b;a[0].abc=a;b.push(b);a.push(a);equals(QUnit.equiv(b,a),true,"Should not repeat test on object/array (ambigous test)");b[0].def=1;a[0].def=1;equals(QUnit.equiv(b,a),true,"Should not repeat test on object/array (ambigous test)");b[0].def=1;a[0].def=0;equals(QUnit.equiv(b,a),false,"Should not repeat test on object/array (unambigous test)")});test("Test that must be done at the end because they extend some primitive's prototype",function(){Function.prototype.global=true;Function.prototype.multiline=true;Function.prototype.ignoreCase=false;Function.prototype.source="my regex";var a=/my regex/gm;equals(QUnit.equiv(a,function(){}),false,"A function that looks that a regex isn't a regex");equals(QUnit.equiv(function(){},a),false,"Same conversely, but ensures that function and regexp are distinct because their constructor are different")});