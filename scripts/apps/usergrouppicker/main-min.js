jive.namespace("UserGroupPicker");jive.UserGroupPicker.Main=jive.oo.Class.extend(function(a){jive.conc.observable(this);this.init=function(b){var c=this;var d={startingGroups:{groups:[],groupLists:[]},multiple:false,groupAllowed:true,listAllowed:false,disabled:false,valueIsUserGroupName:false,document:$j(document),object:null,entitlement:"VIEW",$input:null,existingModal:{modalContainer:"",prevContainer:"",browseContainer:""}};c.options=$j.extend(d,b);if(!c.options.view){c.options.view=new jive.UserGroupPicker.View(c.options.$input,c.options)}if(!c.options.model){c.options.model=new jive.UserGroupPicker.Source(c.options)}this.options.view.addListener("autocompleteRequest",function(e){c.options.model.autocomplete(e).addCallback(function(f){if(typeof(f)=="object"){c.options.view.autocompleteResponse(f)}})});this.options.view.addListener("selectedUserGroupsChanged",function(e){c.emit("selectedUserGroupsChanged",e)})};this.setDisabled=function(c){this.options.view.setDisabled(c)};this.setUserGroups=function(b){this.options.view.setSelectedGroups(b)};this.setLists=function(b){this.options.view.setSelectedLists(b)};this.hide=function(){this.options.view.hide()};this.show=function(){this.options.view.show()};this.val=function(){return this.options.view.val()};this.setNoPicker=function(c){this.options.view.setNoPicker(c)};this.reset=function(){this.options.view.setSelectedGroups(this.options.startingGroups.groups);this.options.view.setSelectedLists(this.options.startingGroups.groupLists)}});