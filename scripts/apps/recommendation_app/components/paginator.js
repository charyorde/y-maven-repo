/**
 * Houses the functionality for the dotted paginator in recommended for you.
 *
 * @depends path=/resources/scripts/jive/util.js
 * @depends path=/resources/scripts/lib/jiverscripts/src/conc/observable.js
 *
 * @param {jQuery} $container
 */

jive.namespace('RecommendationApp').Paginator = function($container) {
    var self = jive.conc.observable({});


    /**
     * Go to a page by its index.
     *
     * @param {object} payload
     */
    function goToPage(payload) {
        if (!payload.isDisabled) {
            var index = parseInt(payload.index),
                total = $container.find('.j-js-item a').length;

            self.update(index + 1, total, true).emit('goToPage', payload);
        }
    }

    /**
     * Updates the page indicator (dot).
     *
     * @param {number} pageNumber (starts at 1)
     * @param {boolean} animate if true, the indicator is moved horizontally in to position using an animation
     */
    function updateCurrentPageIndicator(pageNumber, animate) {
        // $container begins faded out. only update the $dot if $container is visible on the page, and if the reference
        // item node is present
        var $reference = $container.find('.j-js-item a').eq(pageNumber - 1);

        if ($container.is(':visible') && $reference.length > 0) {
            var $dot       = $container.find('.j-js-item-highlight'),
                duration   = animate ? 200 : 0,
                // find the offset of the anchor over which the $dot should be placed
                left       = $reference.position().left - 3;

            // add the $dot to the dom if it doesn't already exist
            if (!$dot.length) {
                $dot = $j(jive.eae.recommendation.paginatorCurrentPage()).appendTo($container);
            }

            // move the $dot to the proper position and show it (if it isn't already visible)
            $dot.animate({ left: left }, duration, function() {
                // the $dot will initially be invisible. show it here.
                $dot.not(':visible').fadeIn(600);
            });
        }
        else {
            // no corresponding item, hide dot
            $dot = $container.find('.j-js-item-highlight');
            if ($dot.length && $dot.is(':visible')) {
                $dot.hide();
            }
        }
    }
    

    // public
    /**
     * Updates the paginator UI.
     *
     * @param {number} index The index of the current page
     * @param {number} numberOfPages Total number of pages
     * @param {boolean} [animate=false] Should this update be animated
     */
    self.update = function(index, numberOfPages, animate) {
        var $newPaginator = $j(jive.eae.recommendation.paginator({
                currentPage   :   index,
                numberOfPages : numberOfPages
            })),
            $oldPaginator = $container.find('.j-js-paginator');

        // Initially, the paginator is not in the UI as it's not generated by the soy function.
        if ($oldPaginator.length) {
            $oldPaginator.replaceWith($newPaginator);
        } else {
            $container.append($newPaginator);
        }

        updateCurrentPageIndicator(index, !!animate);

        // attach events
        $newPaginator.delegate('a', 'click', function(e) {
            e.preventDefault();
            goToPage(jive.util.extractDataAttributes(this));
        });

        return self;
    };


    return self;
};