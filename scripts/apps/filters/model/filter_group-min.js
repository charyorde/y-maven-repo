jive.namespace("Filters");jive.Filters.FilterGroup=jive.oo.Class.extend(function(a){var b=jive.Filters;function d(){return true}a.init=function(g,f){var e=this;this.filters=(jQuery.isArray(g)?g:[g]).filter(function(h){return !!h});this.predicate=f||d;if(this.filters.length>0){this.linkParents(this.filters)}};this.isEmpty=function(){return this.filters.length<1||this.getFilters().length<1};this.get=function(e){var f=typeof e=="string"?this.find(function(g){return g.id==e}):e;if(f){return f}else{throw"Could not find a browse filter with id, "+e}};a.getFilters=function(){return this.filters.filter(this.predicate)};this.getSorts=function(){var e=[];this.forEach(function(f){if(f.sorts&&f.sorts.length>0){e=f.sorts}});return e};this.getRoot=function(){var e=this.getFilters();if(e.length==1){return e[0]}else{if(e.length>1){throw"Cannot get the root of a filter group that has more than one root."}else{throw"Cannot get the root of an empty filter group."}}};this.getIDs=function(){var e=this;return this.map(function(f){return f.id})};this.getLeafIDs=function(){var e=this.predicate;return this.map(function(g){return g}).filter(function(f){return !f.children||f.children.every(function(g){return !e(g)})}).map(function(f){return f.id})};this.applied=function(g){var e=this,h=this.predicate,f;this.forEach(function(i){var j=e.valueExpression(i);if(j){g.forEach(function(l){var k=l.match(j);if(k){e.set(i,k[1].split("|"))}})}});f=this.find(function(i){return g.every(function(j){return e.parentOf(i,j)})});return new b.FilterGroup(f,function(i){return h(i)&&g.some(function(j){return e.parentOf(i,j)})})};this.forEach=function(g,f){var e=this;(f||e.filters).forEach(function(h){if(e.predicate(h)){g(h)}});(f||e.filters).forEach(function(h){if(h.children&&e.predicate(h)){e.forEach(g,h.children)}})};this.find=function(e){var f;this.forEach(function(g){if(!f&&e(g)){f=g}});return f};this.map=function(f){var e=[];this.forEach(function(g){e.push(f(g))});return e};this.filter=function(e){var f=this.predicate;return new b.FilterGroup(this.filters,function(g){return e(g)&&f(g)})};this.some=function(e){var f=false;this.forEach(function(g){if(e(g)){f=true}});return f};this.every=function(e){return !this.some(function(f){return !e(f)})};this.parentOf=function(g,f){var e=this;if(g.id==f){return true}else{if(g.children){return g.children.some(function(h){return e.parentOf(h,f)})}else{return false}}};this.childOf=function(f,g){var e=this.get(g);return this.parentOf(e,f.id)};this.set=function(f,h){var j=this.predicate,e=new b.FilterGroup(this.filters,function(k){return j(k)||e.parentOf(k,f)}),g=e.get(f),i={type:"simple",id:this.idWithValue(g,h),exclusive:true};if(h&&h.length>0){i.parent=g;if(!g.children){g.children=[]}if(!g.children.some(function(k){return k.id==i.id})){g.children.push(i)}return new b.FilterGroup(this.filters,function(k){return(j(k)||e.parentOf(k,i.id))&&(!k.parent||k.parent.id!=g.id||k.id==i.id)})}else{return this.unset(f)}};this.unset=function(e){var f=this.predicate;return new b.FilterGroup(this.filters,function(g){return f(g)&&(!g.parent||g.parent.id!=e)})};this.objectTypes=function(){var e=this.map(function(g){return g.objectTypes}).filter(function(g){return g&&g.length>0});var f=e.reduce(function(g,h){return g.concat(h)},[]).unique();return f.filter(function(g){return e.every(function(h){return h.indexOf(g)>=0})})};var c=/\[([^\[]*)\]$/;a.idWithValue=function(f,h){var e,g,i=this.valueExpression(f);h=jQuery.isArray(h)?h.join("|"):h;if(f.id.match(c)){e=f.id.match(c)[1];g=f.id+"~"+e+"["+h+"]"}else{g=f.id+"["+h+"]"}if(g&&g.match(i)){return g}else{throw"An error occurred applying a dynamic value: "+f.id+", "+h}};a.linkParents=function(f){var e=this;f.forEach(function(g){(g.children||[]).forEach(function(h){h.parent=g;e.linkParents([h])})})};a.valueExpression=function(e){this.expressions=this.expressions||{};var f=this.expressions[e.id];if(!f&&e.valueExpression){f=new RegExp(e.valueExpression);this.expressions[e.id]=f}return f}});