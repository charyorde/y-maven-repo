define("jive.JAF.CoreContainer.TokenProvider",function(){return jive.oo.Class.extend(function(b){jive.conc.observable(this);var e=null;var d=10000;var c=5;var a=0;this.init=function(f){this.model=f};this.updateContainerSecurityToken=function(){var g=this;a++;if(e!=null){window.clearTimeout(e);e=null}var f=g.model.getContainerSecurityToken();f.addCallback(function(j){if(j&&j.token){var h=j.token;shindig.auth.updateSecurityToken(h);var i=d;if(j.ttl){i=j.ttl*1000}a=0;g.emit("container.token.refreshed",j.token);e=window.setTimeout(g.updateContainerSecurityToken.bind(g),i*0.9)}else{this.handleFailSecurityTokenUpdate_()}}.bind(g)).addErrback(function(h){this.handleFailSecurityTokenUpdate_()}.bind(g))};this.handleFailSecurityTokenUpdate_=function(){var f=this;if(console){console.log("Fail to update container security token")}if(a<c){if(console){console.log("Will try to update container security token later.")}e=window.setTimeout(f.updateContainerSecurityToken.bind(f),d)}else{if(console){console.log("Max number of tries to update container security token has expired.")}a=0;f.emit("container.token.refreshed","")}};this.getSecurityToken=function(){return shindig.auth.getSecurityToken()}})});