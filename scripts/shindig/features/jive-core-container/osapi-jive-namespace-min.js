if(typeof(osapi)=="undefined"){var osapi={}}if(typeof(osapi.jive)=="undefined"){osapi.jive={}}osapi.jive.extend=function(){var k,c,a,b,g,h,f=arguments[0]||{},e=1,d=arguments.length,j=false;if(typeof f==="boolean"){j=f;f=arguments[1]||{};e=2}if(typeof f!=="object"&&!osapi.jive.isFunction(f)){f={}}if(d===e){f=this;--e}for(;e<d;e++){if((k=arguments[e])!=null){for(c in k){a=f[c];b=k[c];if(f===b){continue}if(j&&b&&(osapi.jive.isPlainObject(b)||(g=osapi.jive.isArray(b)))){if(g){g=false;h=a&&osapi.jive.isArray(a)?a:[]}else{h=a&&osapi.jive.isPlainObject(a)?a:{}}f[c]=osapi.jive.extend(j,h,b)}else{if(b!==undefined){f[c]=b}}}}}return f};osapi.jive.extend(osapi.jive,{inArray:function(c,d){if(Array.prototype.indexOf){return Array.prototype.indexOf.call(d,c)}for(var a=0,b=d.length;a<b;a++){if(d[a]===c){return a}}return -1},isFunction:function(a){return osapi.jive.type(a)==="function"},isArray:Array.isArray||function(a){return osapi.jive.type(a)==="array"},isPlainObject:function(b){if(!b||osapi.jive.type(b)!=="object"||b.nodeType||osapi.jive.isWindow(b)){return false}if(b.constructor&&!Object.prototype.hasOwnProperty.call(b,"constructor")&&!Object.prototype.hasOwnProperty.call(b.constructor.prototype,"isPrototypeOf")){return false}var a;for(a in b){}return a===undefined||Object.prototype.hasOwnProperty.call(b,a)},type:function(a){return a==null?String(a):osapi.jive.class2type[Object.prototype.toString.call(a)]||"object"},class2type:{},isWindow:function(a){return a&&typeof a==="object"&&"setInterval" in a},each:function(d,g,c){var b,e=0,f=d.length,a=f===undefined||osapi.jive.isFunction(d);if(c){if(a){for(b in d){if(g.apply(d[b],c)===false){break}}}else{for(;e<f;){if(g.apply(d[e++],c)===false){break}}}}else{if(a){for(b in d){if(g.call(d[b],b,d[b])===false){break}}}else{for(;e<f;){if(g.call(d[e],e,d[e++])===false){break}}}}return d},map:function(a,h,j){var f,g,e=[],c=0,b=a.length,d=osapi.jive.isArray(a);if(d){for(;c<b;c++){f=h(a[c],c,j);if(f!=null){e[e.length]=f}}}else{for(g in a){f=h(a[g],g,j);if(f!=null){e[e.length]=f}}}return e.concat.apply([],e)}});osapi.jive.each("Boolean Number String Function Array Date RegExp Object".split(" "),function(b,a){osapi.jive.class2type["[object "+a+"]"]=a.toLowerCase()});osapi.jive.extend(osapi.jive,{namespace:function(a,e){var d=a.split("."),c=this,b;for(b=0;b<d.length;b+=1){if(typeof(c[d[b]])==="undefined"){if(b==d.length-1&&typeof(e)!="undefined"){c[d[b]]=e}else{c[d[b]]={}}}c=c[d[b]]}return c}});